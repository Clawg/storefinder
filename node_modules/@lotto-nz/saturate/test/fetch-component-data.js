import {describe, before, it} from 'mocha'
import {expect} from 'code'
import {CALL_API, fetchComponentData} from  '../src'
import {needs} from '../src/fetch-component-data'

describe('Fetch component data', () => {

    it('should return a promise when invoked with components', (done) => {

        var dispatch = function() {}

        var result = fetchComponentData(dispatch, [{}], {})
        expect(result.then).to.be.function()
        done()
    })

    it('should return the needs of the components', (done) => {

        var someNeed = function() {}

        var obj = needs([{ needs: [someNeed] }, { needs: [someNeed] }])
        expect(obj.length).to.be.equal(2)
        done()
    })

    it('should return a promise when invoked without components', (done) => {

        var dispatch = function() {}

        var result = fetchComponentData(dispatch, [{needs: []}], {})
        expect(result).to.be.object()
        done()
    })

    it('should throw an error when invoked incorrectly', (done) => {

        expect(fetchComponentData).to.throw(/dispatch/)
        expect(fetchComponentData.bind(null, function() {})).to.throw(/components/)
        done()
    })
})
