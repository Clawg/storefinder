// src/fetch-component-data.js

export function needs (components) {
    return components.reduce((prev, current) => {

        return (current.needs || [])
            .concat((current.WrappedComponent ? current.WrappedComponent.needs : []) || [])
            .concat(prev)
    }, [])
}

export default function fetchComponentData (dispatch, components, params) {

    if ( ! dispatch) {
        throw new Error('dispatch not supplied')
    }

    if ( ! components || components.length === 0) {
        throw new Error('no components supplied')
    }

    const promises = needs(components).map((need) => dispatch(need(params)))

    return Promise.all(promises)
}
